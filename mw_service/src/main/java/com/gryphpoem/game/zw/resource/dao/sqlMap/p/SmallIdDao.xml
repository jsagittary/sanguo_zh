<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SmallIdDao">

	<select id="selectSmallId" parameterType="Long" resultMap="smallId">
		select keyId,lordId,createTime from p_smallid where lordId=#{lordId}
	</select>
    <resultMap id="smallId" type="SmallId">
        <id column="keyId" property="accountKey" />
    </resultMap>

	<insert id="insertSmallId" parameterType="SmallId">
		insert into
		p_smallid(keyId,lordId,createTime)
		values(#{accountKey},#{lordId},now())
	</insert>

	<select id="load" parameterType="HashMap" resultMap="smallId">
	select keyId,lordId,createTime from p_smallid where lordId >
	#{curIndex,javaType=java.lang.Long,jdbcType=BIGINT} order by lordId
	limit 0,#{count,javaType=int}
	</select>
	
	<insert id="insertAllNewSmallId" >
		insert into p_smallid(keyId,lordId,createTime) select keyId,lordId,now() from 
		(
		select a.accountKey,a.lordId from p_account a INNER JOIN  
		(select * from p_lord ) l
		on a.lordId = l.lordId
		and a.loginDate    &lt;   (select date_sub(now(),interval 30 day))
		and l.`level` &lt;=10
		and l.vip = 0
		and l.nick is not null) z
	</insert>

</mapper>
