<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AccountDao">
	<select id="selectAccount" parameterType="HashMap" resultType="Account">
		select 
		keyId,accountKey,serverId,platNo,publisher,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider
		from p_account where accountKey=#{accountKey} and serverId=#{serverId}
	</select>

	<select id="selectAccountByLordId" parameterType="Long" resultType="Account">
		select 
		keyId,accountKey,serverId,platNo,publisher,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider
		from p_account where lordId=#{lordId}
	</select>

	<select id="selectAccountByKeyId" parameterType="int" resultType="Account">
		select 
		keyId,accountKey,serverId,platNo,publisher,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider
		from p_account where keyId=#{keyId}
	</select>

	<select id="selectAccountMapByLords" resultType="Account">
		select 
		keyId,accountKey,serverId,platNo,publisher,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider
		from p_account where lordId in
		<foreach item="lordIds" index="index" collection="list" open="(" separator="," close=")">
			#{lordIds}
		</foreach>
	</select>

	<insert id="insertAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="keyId">
		insert into
		p_account(accountKey,serverId,platNo,platId,childNo,lordId,deviceNo,createDate,loginDays,loginDate,publisher)
		values(#{accountKey},#{serverId},#{platNo},#{platId},#{childNo},#{lordId},#{deviceNo},#{createDate},#{loginDays},#{loginDate},#{publisher})
	</insert>
	
	<insert id="insertFullAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="keyId">
		insert into
		p_account(accountKey,serverId,platNo,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider,publisher)
		values(#{accountKey},#{serverId},#{platNo},#{platId},#{childNo},#{forbid},#{whiteName},#{lordId},#{created},#{deviceNo},#{createDate},#{loginDays},#{loginDate},#{isGm},#{isGuider},#{publisher})
	</insert>

	<update id="updateAccountGm" parameterType="Account">
		update p_account set isGm=#{isGm} where keyId = #{keyId}
	</update>

	<update id="updateCreateRole" parameterType="Account">
		update p_account set created=1,createDate=#{createDate} where lordId=#{lordId}
	</update>
	
	<update id="updateIordId" parameterType="Account">
		update p_account set lordId=#{lordId},created=0  where keyId =#{keyId}
	</update>

	<!-- <update id="updateNick" parameterType="Map"> update p_account set nick=#{nick} where lordId=#{lordId} </update> -->

	<update id="recordLoginTime" parameterType="Account">
		update p_account set deviceNo=#{deviceNo},childNo=#{childNo},loginDate=#{loginDate},loginDays=#{loginDays},forbid=#{forbid}
		where keyId=#{keyId}
	</update>

	<!-- <select id="sameNameCount" parameterType="String" resultType="Integer"> select count(lordId) from p_account where nick=#{nick} </select> -->

	<select id="load" parameterType="HashMap" resultType="Account">
		select 
		keyId,accountKey,serverId,platNo,publisher,platId,childNo,forbid,whiteName,lordId,created,deviceNo,createDate,loginDays,loginDate,isGm,isGuider
		from p_account where keyId > #{curIndex} order by keyId limit 0,#{count}
	</select>
	
	<select id="getMaxLordId" parameterType="HashMap" resultType="MaxLordId">
		SELECT platNo ,MAX(lordId) as maxLordId FROM p_account GROUP BY platNo
	</select>
	<select id="selectMinAccountKey" resultType="Long">
		SELECT MIN(accountKey) FROM p_account
	</select>

</mapper>
